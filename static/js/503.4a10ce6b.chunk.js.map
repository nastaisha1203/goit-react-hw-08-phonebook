{"version":3,"file":"static/js/503.4a10ce6b.chunk.js","mappings":"mQAEaA,EAAOC,EAAAA,GAAAA,KAAH,4LAOJC,EAAQD,EAAAA,GAAAA,MAAH,sIAOLE,EAASF,EAAAA,GAAAA,OAAH,kJ,SCTNG,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAmBjB,OACE,UAACN,EAAD,CAAMO,SAlBa,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfN,GACEO,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAGlCE,KAAKC,EAAAA,IACLD,MAAK,SAAAE,GACJC,EAAAA,GAAAA,QAAA,kBAAyBD,EAASE,KAAKC,KAAvC,KACD,IACAC,OAAM,kBAAMH,EAAAA,GAAAA,MAAA,yCAAN,IACTV,EAAKc,OACN,EAG+BC,aAAa,MAA3C,WACE,UAACvB,EAAD,oBAEE,kBAAOwB,KAAK,QAAQJ,KAAK,QAAQK,UAAQ,QAE3C,UAACzB,EAAD,uBAEE,kBACEwB,KAAK,WACLJ,KAAK,WACLK,UAAQ,EACRC,UAAW,EACXC,UAAW,SAGf,SAAC1B,EAAD,CAAQuB,KAAK,SAAb,sBAGL,EChCD,EAXc,WACZ,OACE,4BACE,SAACI,EAAA,EAAD,WACE,wCAEF,SAAC1B,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.js","pages/Login.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 320px;\n  border: solid 2px grey;\n  margin: 0 auto;\n  padding: 10px 15px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2), 0 16px 20px rgba(0, 0, 0, 0.2);\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n  font-size: 18px;\n  font-weight: 500;\n`;\nexport const Button = styled.button`\n  font-weight: 500;\n  &:hover {\n    color: #e84a5f;\n    background-color: white;\n    border-color: transparent;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { unwrapResult } from '@reduxjs/toolkit';\nimport { toast } from 'react-hot-toast';\n\nimport { Button, Form, Label } from './LoginForm.styled';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    )\n      .then(unwrapResult)\n      .then(response => {\n        toast.success(`Welcome ${response.user.name}!`);\n      })\n      .catch(() => toast.error(`Oops, something went wrong. Try again.`));\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label>\n        Email\n        <input type=\"email\" name=\"email\" required />\n      </Label>\n      <Label>\n        Password\n        <input\n          type=\"password\"\n          name=\"password\"\n          required\n          minLength={5}\n          maxLength={15}\n        />\n      </Label>\n      <Button type=\"submit\">Log In</Button>\n    </Form>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst Login = () => {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["Form","styled","Label","Button","LoginForm","dispatch","useDispatch","onSubmit","e","preventDefault","form","currentTarget","logIn","email","elements","value","password","then","unwrapResult","response","toast","user","name","catch","reset","autoComplete","type","required","minLength","maxLength","Helmet"],"sourceRoot":""}