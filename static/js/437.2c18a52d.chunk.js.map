{"version":3,"file":"static/js/437.2c18a52d.chunk.js","mappings":"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","sources":["redux/filter/selectors.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.styled.js","redux/contacts/selectors.js","redux/selectors.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","pages/Contacts.styled.js","components/Loader/Loader.styled.js","components/Loader/Loader.js","pages/Contacts.js"],"sourcesContent":["export const selectFilter = state => state.filter;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 5px;\n  font-size: 18px;\n  font-weight: 500;\n  margin-bottom: 20px;\n`;\nexport const Input = styled.input`\n  width: 250px;\n  border: none;\n  border-radius: 5px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/filter/filterSlice';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { Input, Label } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(selectFilter);\n  const handleFilter = evt => dispatch(changeFilter(evt.target.value));\n  return (\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" value={value} onChange={handleFilter} />\n    </Label>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 20px;\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n`;\nexport const Number = styled.span`\n  margin-left: 10px;\n`;\nexport const Button = styled.button`\n  background-color: #d5e1d1;\n  border: none;\n  padding: 0;\n\n  &:hover {\n    color: #e84a5f;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { RiDeleteBin2Line } from 'react-icons/ri';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContacts } from 'redux/contacts/operations';\nimport { Button, Item, Number, Text } from './ContactItem.styled';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    setIsDeleting(true);\n    dispatch(deleteContacts(id));\n  };\n  const [isDeleting, setIsDeleting] = useState(false);\n  return (\n    <Item>\n      <Text>\n        {name}:<Number>{number}</Number>\n      </Text>\n      <Button\n        type=\"button\"\n        onClick={handleDelete}\n        disabled={isDeleting && 'disabled'}\n        ariaLabel=\"delete\"\n      >\n        <RiDeleteBin2Line />\n      </Button>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  width: 350px;\n  margin: 0 auto;\n`;\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectContacts } from './contacts/selectors';\nimport { selectFilter } from './filter/selectors';\n\nexport const selectFilteredContacts = createSelector(\n  [selectFilter, selectContacts],\n  (filter, contacts) => {\n    const normalize = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalize)\n    );\n  }\n);\n","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport { List } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItem key={id} id={id} name={name} number={number} />\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FormSection = styled(Form)`\n  width: 330px;\n  padding: 10px 15px;\n  border: 2px solid grey;\n  margin: 0 auto;\n  margin-bottom: 15px;\n  background-color: #b1cba8;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2), 0 16px 20px rgba(0, 0, 0, 0.2);\n`;\n\nexport const Section = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin-bottom: 20px;\n`;\nexport const Label = styled.label`\n  font-size: 18px;\n  font-weight: 500;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const Input = styled(Field)`\n  border: none;\n`;\nexport const Button = styled.button`\n  padding: 4px 5px;\n  border: none;\n  font-size: 14px;\n  font-weight: 500;\n  background-color: white;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2), 0 11px 15px rgba(0, 0, 0, 0.2);\n  &:hover {\n    color: #e84a5f;\n  }\n`;\n","import { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Button,\n  FormSection,\n  Input,\n  Label,\n  Section,\n} from './ContactForm.styled';\nimport { addContacts } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const initialValues = {\n    name: '',\n    number: '',\n  };\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === values.name.toLowerCase()\n      )\n    ) {\n      return alert(`${values.name} is already in contacts`);\n    }\n    dispatch(addContacts(values));\n    resetForm();\n  };\n  return (\n    <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n      <FormSection autoComplete=\"of\">\n        <Section>\n          <Label>\n            Name\n            <Input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </Label>\n          <Label>\n            Number\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </Label>\n        </Section>\n        <Button type=\"submit\">Add contact</Button>\n      </FormSection>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 450px;\n  margin: 0 auto;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  font-size: 26px;\n  margin-bottom: 20px;\n`;\nexport const Contacts = styled.h2`\n  text-align: center;\n  font-size: 20px;\n  margin-bottom: 20px;\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { Container } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <Container>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#4fa94d\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </Container>\n  );\n};\n","import { Filter } from 'components/Filter/Filter';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Contacts, Container, Title } from './Contacts.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectFilteredContacts } from 'redux/selectors';\nimport { Loader } from 'components/Loader/Loader';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilteredContacts);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <Container>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <div>\n        <Title>Phonebook</Title>\n        <ContactForm />\n      </div>\n      <div>\n        <Contacts>Contacts</Contacts>\n        {error && <b>{error}</b>}\n        {contacts.length > 0 && <Filter />}\n        {isLoading && <Loader />}\n        {filter.length > 0 && <ContactList />}\n      </div>\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectFilter","state","filter","Label","styled","Input","Filter","dispatch","useDispatch","value","useSelector","type","onChange","evt","changeFilter","target","Item","Text","Number","Button","ContactItem","id","name","number","useState","isDeleting","setIsDeleting","onClick","deleteContacts","disabled","ariaLabel","List","selectContacts","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","normalize","toLowerCase","contact","includes","ContactList","map","FormSection","Form","Section","Field","ContactForm","initialValues","onSubmit","values","resetForm","find","alert","addContacts","autoComplete","pattern","title","required","Container","Title","Contacts","Loader","height","width","radius","color","wrapperStyle","wrapperClassName","visible","useEffect","fetchContacts","Helmet","length"],"sourceRoot":""}