{"version":3,"file":"static/js/854.644fea2c.chunk.js","mappings":"mQAEaA,EAAOC,EAAAA,GAAAA,KAAH,4LAOJC,EAAQD,EAAAA,GAAAA,MAAH,sIAOLE,EAASF,EAAAA,GAAAA,OAAH,kJ,SCTNG,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAqBjB,OACE,UAACN,EAAD,CAAMO,SApBa,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfN,GACEO,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAGlCG,KAAKC,EAAAA,IACLD,MAAK,SAAAE,GACJC,EAAAA,GAAAA,QAAA,6CACD,IACAC,OAAM,kBAAMD,EAAAA,GAAAA,MAAA,yCAAN,IAETX,EAAKa,OACN,EAG+BC,aAAa,MAA3C,WACE,UAACtB,EAAD,uBAEE,kBACEuB,KAAK,OACLZ,KAAK,OACLa,QAAQ,yHACRC,UAAQ,EACRC,UAAU,IACVC,UAAU,WAGd,UAAC3B,EAAD,oBAEE,kBAAOuB,KAAK,QAAQZ,KAAK,QAAQc,UAAQ,QAE3C,UAACzB,EAAD,uBAEE,kBACEuB,KAAK,WACLZ,KAAK,WACLc,UAAQ,EACRC,UAAW,EACXC,UAAW,SAGf,SAAC1B,EAAD,CAAQsB,KAAK,SAAb,wBAGL,EC7CD,EAXiB,WACf,OACE,4BACE,SAACK,EAAA,EAAD,WACE,+CAEF,SAAC1B,EAAD,MAGL,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.js","pages/Register.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 320px;\n  border: solid 2px grey;\n  margin: 0 auto;\n  padding: 10px 15px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2), 0 16px 20px rgba(0, 0, 0, 0.2);\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n  font-size: 18px;\n  font-weight: 500;\n`;\nexport const Button = styled.button`\n  font-weight: 500;\n  &:hover {\n    color: #e84a5f;\n    background-color: white;\n    border-color: transparent;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { unwrapResult } from '@reduxjs/toolkit';\nimport { toast } from 'react-hot-toast';\nimport { register } from 'redux/auth/operations';\n\nimport { Button, Form, Label } from './RegisterForm.styled';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    )\n      .then(unwrapResult)\n      .then(response => {\n        toast.success(`Welcome! You have successfully registered!`);\n      })\n      .catch(() => toast.error(`Oops, something went wrong. Try again.`));\n\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label>\n        Username\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          required\n          minLength=\"3\"\n          maxLength=\"34\"\n        />\n      </Label>\n      <Label>\n        Email\n        <input type=\"email\" name=\"email\" required />\n      </Label>\n      <Label>\n        Password\n        <input\n          type=\"password\"\n          name=\"password\"\n          required\n          minLength={7}\n          maxLength={15}\n        />\n      </Label>\n      <Button type=\"submit\">Register</Button>\n    </Form>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default Register;\n"],"names":["Form","styled","Label","Button","RegisterForm","dispatch","useDispatch","onSubmit","e","preventDefault","form","currentTarget","register","name","elements","value","email","password","then","unwrapResult","response","toast","catch","reset","autoComplete","type","pattern","required","minLength","maxLength","Helmet"],"sourceRoot":""}